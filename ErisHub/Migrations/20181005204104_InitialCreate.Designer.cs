// <auto-generated />
using System;
using ErisHub.Database.Models;
using Microsoft.EntityFrameworkCore;
using Microsoft.EntityFrameworkCore.Infrastructure;
using Microsoft.EntityFrameworkCore.Migrations;
using Microsoft.EntityFrameworkCore.Storage.ValueConversion;

namespace ErisHub.Migrations
{
    [DbContext(typeof(ErisContext))]
    [Migration("20181005204104_InitialCreate")]
    partial class InitialCreate
    {
        protected override void BuildTargetModel(ModelBuilder modelBuilder)
        {
#pragma warning disable 612, 618
            modelBuilder
                .HasAnnotation("ProductVersion", "2.1.4-rtm-31024")
                .HasAnnotation("Relational:MaxIdentifierLength", 64);

            modelBuilder.Entity("ErisHub.Database.Models.Ban", b =>
                {
                    b.Property<int>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnName("id")
                        .HasColumnType("int(11)");

                    b.Property<int>("BannedById")
                        .HasColumnName("banned_by_id")
                        .HasColumnType("int(11)");

                    b.Property<string>("Cid")
                        .HasColumnName("cid")
                        .HasColumnType("varchar(255)");

                    b.Property<int>("Duration")
                        .HasColumnName("duration")
                        .HasColumnType("int(11)");

                    b.Property<DateTime>("ExpirationTime")
                        .HasColumnName("expiration_time")
                        .HasColumnType("datetime");

                    b.Property<string>("Ip")
                        .HasColumnName("ip")
                        .HasColumnType("varchar(255)");

                    b.Property<string>("Job")
                        .HasColumnName("job")
                        .HasColumnType("varchar(255)");

                    b.Property<string>("Reason")
                        .IsRequired()
                        .HasColumnName("reason")
                        .HasColumnType("text");

                    b.Property<string>("Server")
                        .IsRequired()
                        .HasColumnName("server")
                        .HasColumnType("varchar(255)");

                    b.Property<int>("TargetId")
                        .HasColumnName("target_id")
                        .HasColumnType("int(11)");

                    b.Property<DateTime>("Time")
                        .HasColumnName("time")
                        .HasColumnType("datetime");

                    b.Property<string>("Type")
                        .IsRequired()
                        .HasColumnName("type")
                        .HasColumnType("varchar(255)");

                    b.Property<sbyte?>("Unbanned")
                        .HasColumnName("unbanned")
                        .HasColumnType("tinyint(1)");

                    b.Property<int?>("UnbannedById")
                        .HasColumnName("unbanned_by_id")
                        .HasColumnType("int(11)");

                    b.Property<DateTime?>("UnbannedTime")
                        .HasColumnName("unbanned_time")
                        .HasColumnType("datetime");

                    b.HasKey("Id");

                    b.HasIndex("BannedById")
                        .HasName("index_bans_on_banned_by_id");

                    b.HasIndex("TargetId")
                        .HasName("index_bans_on_target_id");

                    b.HasIndex("UnbannedById")
                        .HasName("index_bans_on_unbanned_by_id");

                    b.ToTable("bans");
                });

            modelBuilder.Entity("ErisHub.Database.Models.Book", b =>
                {
                    b.Property<int>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnName("id")
                        .HasColumnType("int(11)");

                    b.Property<string>("Author")
                        .HasColumnName("author")
                        .HasColumnType("varchar(255)");

                    b.Property<int?>("AuthorId")
                        .HasColumnName("author_id")
                        .HasColumnType("int(11)");

                    b.Property<string>("Category")
                        .HasColumnName("category")
                        .HasColumnType("varchar(255)");

                    b.Property<string>("Content")
                        .HasColumnName("content")
                        .HasColumnType("varchar(255)");

                    b.Property<DateTime>("CreatedAt")
                        .HasColumnName("created_at")
                        .HasColumnType("datetime");

                    b.Property<string>("Title")
                        .HasColumnName("title")
                        .HasColumnType("varchar(255)");

                    b.Property<DateTime>("UpdatedAt")
                        .HasColumnName("updated_at")
                        .HasColumnType("datetime");

                    b.HasKey("Id");

                    b.HasIndex("AuthorId")
                        .HasName("index_books_on_author_id");

                    b.ToTable("books");
                });

            modelBuilder.Entity("ErisHub.Database.Models.Player", b =>
                {
                    b.Property<int>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnName("id")
                        .HasColumnType("int(11)");

                    b.Property<string>("ByondVersion")
                        .IsRequired()
                        .HasColumnName("byond_version")
                        .HasColumnType("varchar(255)");

                    b.Property<string>("Cid")
                        .IsRequired()
                        .HasColumnName("cid")
                        .HasColumnType("varchar(255)");

                    b.Property<string>("Ckey")
                        .IsRequired()
                        .HasColumnName("ckey")
                        .HasColumnType("varchar(255)");

                    b.Property<string>("Country")
                        .HasColumnName("country")
                        .HasColumnType("varchar(255)");

                    b.Property<DateTime>("FirstSeen")
                        .HasColumnName("first_seen")
                        .HasColumnType("datetime");

                    b.Property<int>("Flags")
                        .ValueGeneratedOnAdd()
                        .HasColumnName("flags")
                        .HasColumnType("int(11)")
                        .HasDefaultValueSql("'0'");

                    b.Property<string>("Ip")
                        .IsRequired()
                        .HasColumnName("ip")
                        .HasColumnType("varchar(255)");

                    b.Property<DateTime>("LastSeen")
                        .HasColumnName("last_seen")
                        .HasColumnType("datetime");

                    b.Property<string>("Rank")
                        .IsRequired()
                        .ValueGeneratedOnAdd()
                        .HasColumnName("rank")
                        .HasColumnType("varchar(255)")
                        .HasDefaultValueSql("'player'");

                    b.Property<DateTime?>("Registered")
                        .HasColumnName("registered")
                        .HasColumnType("date");

                    b.HasKey("Id");

                    b.ToTable("players");
                });

            modelBuilder.Entity("ErisHub.Database.Models.Poll", b =>
                {
                    b.Property<int>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnName("id")
                        .HasColumnType("int(11)");

                    b.Property<DateTime>("End")
                        .HasColumnName("end")
                        .HasColumnType("datetime");

                    b.Property<string>("Question")
                        .IsRequired()
                        .HasColumnName("question")
                        .HasColumnType("varchar(255)");

                    b.Property<DateTime>("Start")
                        .HasColumnName("start")
                        .HasColumnType("datetime");

                    b.Property<string>("Type")
                        .IsRequired()
                        .HasColumnName("type")
                        .HasColumnType("varchar(16)");

                    b.HasKey("Id");

                    b.ToTable("polls");
                });

            modelBuilder.Entity("ErisHub.Database.Models.PollOption", b =>
                {
                    b.Property<int>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnName("id")
                        .HasColumnType("int(11)");

                    b.Property<int?>("MaxValue")
                        .HasColumnName("max_value")
                        .HasColumnType("int(11)");

                    b.Property<int?>("MinValue")
                        .HasColumnName("min_value")
                        .HasColumnType("int(11)");

                    b.Property<int>("PollId")
                        .HasColumnName("poll_id")
                        .HasColumnType("int(11)");

                    b.Property<string>("Text")
                        .IsRequired()
                        .HasColumnName("text")
                        .HasColumnType("varchar(255)");

                    b.HasKey("Id");

                    b.HasIndex("PollId")
                        .HasName("index_poll_options_on_poll_id");

                    b.ToTable("poll_options");
                });

            modelBuilder.Entity("ErisHub.Database.Models.PollTextReply", b =>
                {
                    b.Property<int>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnName("id")
                        .HasColumnType("int(11)");

                    b.Property<int?>("PlayerId")
                        .HasColumnName("player_id")
                        .HasColumnType("int(11)");

                    b.Property<int?>("PollId")
                        .HasColumnName("poll_id")
                        .HasColumnType("int(11)");

                    b.Property<string>("Text")
                        .HasColumnName("text")
                        .HasColumnType("text");

                    b.Property<DateTime?>("Time")
                        .HasColumnName("time")
                        .HasColumnType("datetime");

                    b.HasKey("Id");

                    b.HasIndex("PlayerId")
                        .HasName("index_poll_text_replies_on_player_id");

                    b.HasIndex("PollId")
                        .HasName("index_poll_text_replies_on_poll_id");

                    b.ToTable("poll_text_replies");
                });

            modelBuilder.Entity("ErisHub.Database.Models.PollVote", b =>
                {
                    b.Property<int>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnName("id")
                        .HasColumnType("int(11)");

                    b.Property<int>("OptionId")
                        .HasColumnName("option_id")
                        .HasColumnType("int(11)");

                    b.Property<int>("PlayerId")
                        .HasColumnName("player_id")
                        .HasColumnType("int(11)");

                    b.Property<int>("PollId")
                        .HasColumnName("poll_id")
                        .HasColumnType("int(11)");

                    b.Property<DateTime>("Time")
                        .HasColumnName("time")
                        .HasColumnType("datetime");

                    b.HasKey("Id");

                    b.HasIndex("OptionId")
                        .HasName("index_poll_votes_on_option_id");

                    b.HasIndex("PlayerId")
                        .HasName("index_poll_votes_on_player_id");

                    b.HasIndex("PollId")
                        .HasName("index_poll_votes_on_poll_id");

                    b.ToTable("poll_votes");
                });

            modelBuilder.Entity("ErisHub.Database.Models.Population", b =>
                {
                    b.Property<int>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnName("id")
                        .HasColumnType("int(11)");

                    b.Property<int>("AdminCount")
                        .HasColumnName("admin_count")
                        .HasColumnType("int(11)");

                    b.Property<int>("PlayerCount")
                        .HasColumnName("player_count")
                        .HasColumnType("int(11)");

                    b.Property<string>("Server")
                        .IsRequired()
                        .HasColumnName("server")
                        .HasColumnType("varchar(255)");

                    b.Property<DateTime>("Time")
                        .HasColumnName("time")
                        .HasColumnType("datetime");

                    b.HasKey("Id");

                    b.ToTable("populations");
                });

            modelBuilder.Entity("ErisHub.Database.Models.Ban", b =>
                {
                    b.HasOne("ErisHub.Database.Models.Player", "BannedBy")
                        .WithMany("BansBannedBy")
                        .HasForeignKey("BannedById")
                        .HasConstraintName("fk_rails_20d480679b");

                    b.HasOne("ErisHub.Database.Models.Player", "Target")
                        .WithMany("BansTarget")
                        .HasForeignKey("TargetId")
                        .HasConstraintName("fk_rails_62ac37e1e1");

                    b.HasOne("ErisHub.Database.Models.Player", "UnbannedBy")
                        .WithMany("BansUnbannedBy")
                        .HasForeignKey("UnbannedById")
                        .HasConstraintName("fk_rails_a305c9e562");
                });

            modelBuilder.Entity("ErisHub.Database.Models.Book", b =>
                {
                    b.HasOne("ErisHub.Database.Models.Player", "AuthorNavigation")
                        .WithMany("Books")
                        .HasForeignKey("AuthorId")
                        .HasConstraintName("fk_rails_53d51ce16a");
                });

            modelBuilder.Entity("ErisHub.Database.Models.PollOption", b =>
                {
                    b.HasOne("ErisHub.Database.Models.Poll", "Poll")
                        .WithMany("PollOptions")
                        .HasForeignKey("PollId")
                        .HasConstraintName("fk_rails_aa85becb42");
                });

            modelBuilder.Entity("ErisHub.Database.Models.PollTextReply", b =>
                {
                    b.HasOne("ErisHub.Database.Models.Player", "Player")
                        .WithMany("PollTextReplies")
                        .HasForeignKey("PlayerId")
                        .HasConstraintName("fk_rails_ffc8df499f");

                    b.HasOne("ErisHub.Database.Models.Poll", "Poll")
                        .WithMany("PollTextReplies")
                        .HasForeignKey("PollId")
                        .HasConstraintName("fk_rails_0833f4df0b");
                });

            modelBuilder.Entity("ErisHub.Database.Models.PollVote", b =>
                {
                    b.HasOne("ErisHub.Database.Models.PollOption", "Option")
                        .WithMany("PollVotes")
                        .HasForeignKey("OptionId")
                        .HasConstraintName("fk_rails_826ebfbbb3");

                    b.HasOne("ErisHub.Database.Models.Player", "Player")
                        .WithMany("PollVotes")
                        .HasForeignKey("PlayerId")
                        .HasConstraintName("fk_rails_a3e5a3aede");

                    b.HasOne("ErisHub.Database.Models.Poll", "Poll")
                        .WithMany("PollVotes")
                        .HasForeignKey("PollId")
                        .HasConstraintName("fk_rails_a6e6974b7e");
                });
#pragma warning restore 612, 618
        }
    }
}
